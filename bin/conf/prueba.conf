# example configuration reader_network 0.61
enabled = true

# multicast | broadcast | file
source = "file"
source_file = "121218-cen-200001.gps"
source_file_gps_version = 1

# record for 600 seconds, then exit
timed = 0

# show intervals, if not in daemon mode, every 5 seconds
timed_stats_interval = 5

# if true, fork & record in background, closing stdout output.
# if false, run in foreground, outputing verbose and stats.
mode_daemon = false

# check and drop duplicated asterix packets (doesn't impact performance)
mode_scrm = true

# save data in a directory structure like MM/DD/YYMMDD-region-HHMMSS
# where YY = year, MM = month, DD = day, hh = hour, mm = minutes, ss = seconds
#dest_file_timestamp = true

# recording file will be compressed with bzip2 
#dest_file_compress = true

# output classification, several possibilities
# cen | est | bal | can | sur
dest_file_region = "cen"

# besides recording output, send decoded data in a multicast group to localhost,
# so other applications could use decoded data (like client_xxxx)
dest_localhost = true

# output crcs to screen, mainly to debug purposes
#dest_screen_crc = false

# define multicast groups to be recorded
# name (used only in stats), mcast group, mcast dest port, source ip address, interface ip address
#radar_definition = {
    #"p2-210", "225.181.210.1", "4001", "10.181.210.17", "10.69.210.19",
    #"p2-209", "225.181.209.1", "4001", "10.181.209.17", "10.69.209.19",
    #"vall210", "225.180.210.1", "4001", "10.180.210.17", "10.69.210.19",
    #"vall209", "225.180.209.1", "4001", "10.180.209.17", "10.69.209.19",
    #"al-210", "225.182.210.1", "4001", "10.182.210.17", "10.69.210.19",
    #"al-209", "225.182.209.1", "4001", "10.182.209.17", "10.69.209.19",
    #"mo-209", "225.185.209.1", "4001", "10.182.209.17", "10.69.209.19"
#}

#radar_definition = {
    #"p2-210", "225.181.210.1", "4001", "10.181.210.17", "172.88.0.71",
    #"p2-209", "225.181.209.1", "4001", "10.181.209.17", "172.88.0.71",
    #"vall210", "225.180.210.1", "4001", "10.180.210.17", "172.88.0.71",
    #"vall209", "225.180.209.1", "4001", "10.180.209.17", "172.88.0.71",
    #"al-210", "225.182.210.1", "4001", "10.182.210.17", "172.88.0.71",
    #"al-209", "225.182.209.1", "4001", "10.182.209.17", "172.88.0.71",
    #"mo-209", "225.185.209.1", "4001", "10.182.209.17", "172.88.0.71"
#}

# destination filename. if dest_file_timestamp = true, then dest_file
# will be considered as a directory.
#dest_file = "datos/local"

# ast records raw asterix data
# gps timestamps datarecords, appending 10 bytes to each. get last 3 bytes,
# LSB is the last one, and divide the resulting number by 128. timestamp is
# in seconds.
# see source for an example to decode
# ast | gps
#dest_file_format = "ast"
#dest_file_format = "gps"


# besides the format, extension can be changed
# ast | sast | gps | sgps
#dest_file_extension = "gps"
#dest_file_extension = "sast"

# directory to upload (ip is also needed, should be fixed)
#dest_ftp_uri = "ftp://172.88.0.73/pub/swap/"

# ip host to upload
#dest_ftp_host = "172.88.0.73"

